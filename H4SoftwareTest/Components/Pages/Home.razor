@page "/"
@* attribute [Microsoft.AspNetCore.Authorization.Authorize(Policy ="AuthenticateUser")]*@

@inject AuthenticationStateProvider _authenticationStateProvider
@*inject Code.RoleHandler _roleHandler
@inject IServiceProvider _serviceProvider*@

<PageTitle>Home</PageTitle>

@*<AuthorizeView>
    <Authorized role = "Admin">
        <h1>Hello, world!</h1>

    </Authorized>
    <NotAuthorized>
       <p>You must log in to view page</p>
    </NotAuthorized>
</AuthorizeView>
*@

@if (isAdmin)
{
    <h1>Hello, world!</h1>
    <p>You are Admin</p>
}
else
{
    <p>You must log in to view page</p>
}
@code{
    public bool isAuthenticated;
    private bool isAdmin;
    protected override async Task OnInitializedAsync(){
        var authState = await  _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isAuthenticated = user.Identity.IsAuthenticated;
        isAdmin = user.IsInRole("Admin");
        // if(isAuthenticated)
        //     await _roleHandler.CreateUserRolesAsync(user.Identity.Name, "Admin", _serviceProvider);
    }
}